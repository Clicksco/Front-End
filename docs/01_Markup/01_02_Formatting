#### You <b>MUST</b> not use ID selectors

It is unnecessary to use ID's within your Markup as a Presentation/Behaivour hook, as this is stating that you feel the element is not to be reused within the site/application you are working on.

Sticking specifically to classes, you allow for all elements to reused if the case may arise.

Understanding that reusability is not just based on the aesthetic of an element is key to having a modular codebase.

One exception to this rule, is using an ID selector for page linking purposes, for example:

	<a href="my-page.html#my-id-selector"

<br />

#### You <b>SHOULD</b> implement attributes in the following order; id, class, data-*, anything additional

Implementing attributes in this order allows for better readability and consistency. Please be aware that you <b>SHOULD</b> only add ID attributes when a certain element requires a hash location for page linking purposes.

*Bad Example*

	<img href="some-image.jpg" id="some-page-location-hook" data-width="600" alt="some image" class="some-class" />

*Good Example*

	<img id="some-page-location-hook" class="some-class" data-width="600" href="some-image.jpg" alt="some image" />

<br />

#### You <b>MUST</b> write your Markup, having one element per line

Writing Markup elements one per line, makes for better readability and maintainability.

Also due to the indentation, this will allow maintainers to scan a document and understand the structure of a layout or module.

*Bad Example*

	<div><p><span>Some Text</span></p></div>

*Good Example*

	<div>
    	<p>
        	<span>Some Text</span>
    	</p>
	</div>

<br />

#### You <b>SHOULD</b> omit the type attribute from link and script tags within your Markup

Specifying a type attribute on either the script or link element (unless you are not using CSS or JavaScript) is unnecessary, as HTML5 implies that text/css and text/javascript as default.

<br />

#### You <b>SHOULD</b> omit the protocol from any resources contained in your Markup

Omitting the protocol section from the URLs which point to resources such as; images, scripts, stylesheets and any other media files will result in minor performance benefits, as well as preventing mixed content issues.

*Resources*

- [the protocol-relative URL](http://www.paulirish.com/2010/the-protocol-relative-url/)

<br />

#### You <b>SHOULD</b> indent your markup elements, to show parent-child relationships within your modules.

This allows maintainers to scan the codebase and understand the hierarchy, without seeing a visual implementation.

<br />

